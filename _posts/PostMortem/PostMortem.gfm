Burkhalter Némoz  
BACHELOR OF SCIENCE  
Game Programming

<div class="rect">

Specialization Project Post-Mortem Retrospective on *Girl and Kitty* and
*Project VR*

</div>

SUMMATIVE - 6FSC0XF101 - GPR921  
SIORAK Nicolas - FARHAN EliasJuly 13, 2024  

# Context

For the 3rd year of bachelor studies at the SAE Institute Geneva, the
Games Programming, Game Art, and Audio students collaborate to create a
video game, which counts as a specialization project for the Games
Programming students.

This year, there were two projects split across two teams, with some
programmers working on both. These projects are: Girl and Kitty, where a
mystical cat leads a bedridden young girl through a magic door to solve
puzzles in dream worlds, and Project VR, where the player wakes after a
bad drinking episode, finds themselves stranded in a strange mansion
with a corpse next to them, and must find a way out, similar to an
escape room but in VR.

The timeline for these projects began with pre-production in June 2023,
which concluded in September 2023. Production to create vertical slices
for both games started immediately after pre-production and continued
until February 9th.

## Pitches and Constraints

For both games our teacher, Elias Farhan, imposed the constraint of
using Unreal Engine 5 and to start off with the games” provided pitches.
The pitch for the Girl and Kitty project was :

“Explore the dream worlds of a sick child in the company of a cat with
magical powers in Project Girl and Kitty, a contemplative 3D
puzzle-adventure game. Manipulate objects by making them change size
using the cat’s powers to solve unique puzzles, and immerse yourself in
a captivating adventure combining imagination and challenges.”

For Project VR we had an additional constraint that the game had to be
played in VR first and foremost. The pitch was :

“Project VR is a virtual reality puzzle game where the main character,
in the midst of a hangover, must reconstruct the events of the previous
day by solving puzzles in their closed apartment.”

## Team

The team was divided into three groups: Programming, Art, and Audio.
Each member had a specific role. For the artists, roles were assigned by
our teacher, while for the programmers, tasks were undertaken based on
individual skills. The objective for the audio team was to work on the
game through a Wwise session hosted on a Perforce server. However, due
to technical difficulties during production, we were unable to set this
up. Consequently, we couldn’t integrate the audio engineering section’s
work before the final deadline, and integration had to be done using a
USB key. Each department included the following members:

### Stakeholders

- Elias Farhan (Head Game Programming)

- Nicolas Vallée (Head Game Art)

- Stéphane Chapelle (Head Audio)

- Nicolas Brière (Project Guidance)

### Programmers

**Girl and Kitty**

- Samuel (Producer)

- Fabian (SysAdmin)

- Dylan (Gameplay Programmer)

- Edouard (Game Designer)

- Némoz (Gameplay programmer and Game Designer)

**Project VR**

- Samuel (Producer)

- Fabian (Product Owner and SysAdmin)

- Benjamin (Programmer and Game Designer)

- Edouard (Programmer and Game Designer)

- Némoz (Game Designer)

### Artists

**Girl and Kitty**

- Johanna (Product Owner & Lead concept)

- Carla (Character & Asset modelling)

- José (Character, Asset, Environment modelling & integration)

- Elodie (Environment & Asset modelling)

- Matthias (Research & Development)

**Project VR**

- Jessica (Lead Props / FX)

- Eliot (Lead UI)

- Jeremy (Lead R&D)

- Aliya (Lead Concepts / Character)

- Aurore (Lead Environment / Animations / Integration)

### Audio

- Eliott (Lead audio & Music production)

- Théo (Lead audio & Music production/mixing with Wwise)

- Benjamin (audio production)

- Vincent (audio production)

- Tina (audio production)

- Gerogii (audio production)

- Jolan (audio production)

- Sebastian (audio production)

- Loris (audio production)

# Project

## Artistic Direction

The artistic direction was initially set by the head of the Game Art
section, Nicolas Vallée. For both games, the Game Art students made
proposals with occasional feedback from the Game Programming students
until the direction was validated by the head of the Game Art section.

<figure>
<p><img src="DA GK.PNG" /></p>
<figcaption><p>Inspiration from artist Amelicart and the game Dordogne
for girl and kitty</p></figcaption>
</figure>

<figure>
<p><img src="DA GK2.PNG" /></p>
<figcaption><p>The game Tunic was proposed for a low-poly
aesthethic</p></figcaption>
</figure>

<figure>
<p><img src="DA VR.PNG" /></p>
<figcaption><p>Concept art for Project VR</p></figcaption>
</figure>

## Production Tools

**Girl and Kitty**

The game was developed using Unreal Engine 5. We primarily used C++,
requiring Visual Studio 2022 as our IDE while some team members opted to
use JetBrain’s Rider instead. The project’s source code was hosted on a
Git repository located on a self-hosted GitLab instance, while the
assets were hosted on a Nextcloud instance. Hard-surface models were
created using Maya or 3DS Max and organic meshes were crafted in ZBrush.

**Project VR**

The second game game was also developed using Unreal Engine 5. We
predominantly used blueprints, thus rarely needing an IDE; however, when
necessary, we used Visual Studio 2022. The project’s source code was
similarly hosted on a self-hosted GitLab instance. The artists used the
same tools and workflow as for Girl and Kitty.

## Organisation

Following guidance from William Marié, a Producer at Old Skull Games, we
decided to use SCRUM for our methodology. Two product owners (one per
game) would define user stories (tasks) and chose which were appropriate
to tackle over a sprint of two weeks. At the end of the sprint we went
through a sprint review then a sprint planning for the next one. We also
had weekly meetings with the head of the Game Programming section Elias
Farhan to present our progress as well as receive continuous feedback
and advice on the projects.

# My Roles

In this project, I took on two primary roles: Game Designer for both
projects and Gameplay Programmer for Girl and Kitty. Additionally, I
provided some assistance with Project VR.

As a Game Designer, my responsibilities included designing gameplay
mechanics, creating level designs, developing puzzles that are
interesting standalone pieces and ensuring a cohesive gameplay
experience that aligned with the story and original vision we had for
the games.

For Girl and Kitty, I served as a Gameplay Programmer. My main tasks
involved implementing movement, creating the technical designs for the
mechanics and bug fixing. This included scripting the interactions
between the girl and the cat and developing some of the puzzle logic. I
utilized Unreal Engine 5’s Blueprint system as a quick foundation to
test input methods or to create a quick puzzle prototype before moving
to C++ for more complex functionality and better integration with the
rest of the project which was also mostly in C++.

For Project VR, although my primary focus was on Girl and Kitty, I also
contributed by assisting the team with one or two gameplay elements and
troubleshooting issues.

Additionally, I was tasked with researching Wwise integration for both
projects.

## Problems encountered

Over the course of these productions we had a few problems some were
external to us and our team and some were not.

To start with the external problems we had our school wifi that wasn’t
working during a large part of the production which prevented us from
using Perforce. Since the audio team would rely on it we didn’t start
trying to integrate sound until quite late in the production and didn’t
manage to put the audio team’s work fully into the projects.

At some point in the production, my computer died and i had to get a
replacement laptop that couldn’t run Unreal 5 very well. To make matters
worse I had worked carelessly without doing git commits for two weeks on
my current task. This led to a lot of lost work and a great deal of
sapped motivation.

There also was a COVID outbreak among the team such that during the span
of a few week every programmer caught it and couldn’t do much work for
some time.

For the non-external problems, working on two projects at once was more
strenuous than we initially thought. While we were compartmented into
teams, we couldn’t help but look, help and talk about the other team’s
project and so when one deadline wasn’t met, both teams felt the stress.
Personally, since I did work with both teams, I had trouble keeping up
with the progress of both projects since I could only go to one sprint
review/planning as they were scheduled at the same time for both
projects.

Project VR had the unique challenge of being a VR game which meant that
we had to have headsets on hand to accurately test some gameplay
features and movement. During production this proved very bothersome
because we couldn’t at first find enough headsets. We ended up using an
oculus that my mother’s company owns but it was forgotten by someone on
the team on the tramway.

Collaborating with around 20 persons is a challenge in itself to get
every one on the same page and at times, I wasn’t sure what changes I
could make myself and which I had to run through the art team for the
creative vision of the games. This grey area was difficult for us to
navigate as a game designer and hampered somewhat the creativity of the
game design team.

Finally we had some disagreements between the art and programmer teams
that weren’t always expressed rationally or in good faith. This greatly
diminished both teams” confidence in themselves as well as for each
other. Fortunately, this got better as more attempts were made to
understand each others.

## What I Learned

Through using blueprints for puzzles on VR and prototyping for G&K I now
know how to use this tool to get quick and efficient prototypes and a
better understanding of the logic for visual scripting shaders in unreal

By programming for Girl and Kitty I now have a stronger understanding of
both Unreal Engine 5 and how to work on it using C++ which is slightly
different than how I’m otherwise used to coding with C++.

By crafting puzzles, levels and getting feedback on them by Nicolas
Brière (CEO of Old Skull Games and ex-Game Designer) I have gained a
better understanding of how to utilize game design tools and logic to
serve the game as well a greater confidence in my game design
capabilities.

This production was the first time I worked with so many people on the
same project. I have learned how much communication matters in such a
setting and how to do that communication. This was, to me, the most
important lesson that i keep from these projects.

# Conclusion

In the end, the projects fell below our expectations. While this is
partly due to external factors that kept piling on, failures in
communication prevented us from fully leveraging the potential of having
over 20 people working together. As a result, the end product does not
reflect the amount of work invested in it. I believe this has been a
necessary learning experience for some of us (it definitely was for me),
and we are now better prepared for our next projects by addressing the
shortcomings we identified.
